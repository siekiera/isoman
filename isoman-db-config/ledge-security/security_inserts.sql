--# Script to fill the tables with default roles and permissions
--# Currently tested with MySQL, Oracle, Postgres and Hypersonic only.

--# Create the global group
--# this group is used to assign system-wide roles to users

--set search_path to ledge_hello_world;
INSERT INTO SECURITY_RESOURCE_GROUP (RESOURCE_GROUP_ID, RESOURCE_GROUP_NAME) VALUES (1,'global');
INSERT INTO SECURITY_RESOURCE_GROUP (RESOURCE_GROUP_ID, RESOURCE_GROUP_NAME) VALUES (2, 'resource_group_security');

--# Create the root role

INSERT INTO SECURITY_ROLE (ROLE_ID, ROLE_NAME) VALUES (1, 'security_root');
INSERT INTO SECURITY_ROLE (ROLE_ID, ROLE_NAME) VALUES (101, 'role_admin');
INSERT INTO SECURITY_ROLE (ROLE_ID, ROLE_NAME) VALUES (102, 'role_wyk');
INSERT INTO SECURITY_ROLE (ROLE_ID, ROLE_NAME) VALUES (103, 'role_dokt');
INSERT INTO SECURITY_ROLE (ROLE_ID, ROLE_NAME) VALUES (104, 'role_stud');



--# Create an account 'root' for system administartor
--# Remeber to set a good password for this user in a production system!
--# InitialPassword password: 'root'

INSERT INTO SECURITY_USER 
    (USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval) 
    VALUES
    (1, 'root', '{md5}Y6nw6nu5gFB5a2SehUgYRQ==', 'Super', 'User', false, true, 0, 900);

--# Create anonymous account

INSERT INTO SECURITY_USER
     (USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval) 
     VALUES
     (8, 'anonymous', 'x', 'Anonymous', 'User', false, true, 0, 0);



--Has≈Ço: isoman123
INSERT INTO SECURITY_USER
(USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval)
  VALUES (101, 'admin', '{md5}Y6nw6nu5gFB5a2SehUgYRQ==', 'Super', 'User', false, true, 0, 900);
INSERT INTO SECURITY_USER
(USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval)
  VALUES (102, 'wykladowca', '{md5}Y6nw6nu5gFB5a2SehUgYRQ==', 'wykladowca', ' ', false, true, 0, 900);
INSERT INTO SECURITY_USER
(USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval)
  VALUES (103, 'doktorant', '{md5}Y6nw6nu5gFB5a2SehUgYRQ==', 'doktorant', ' ', false, true, 0, 900);
INSERT INTO SECURITY_USER
(USER_ID, LOGIN_NAME, PASSWORD_VALUE, FIRST_NAME, LAST_NAME, locked, confirmed, access_counter, max_inactive_interval)
  VALUES (104, 'student', '{md5}Y6nw6nu5gFB5a2SehUgYRQ==', 'student', ' ', false, true, 0, 900);

INSERT INTO SECURITY_USER_RESOURCE_GROUP_ROLE ( USER_ID, RESOURCE_GROUP_ID, ROLE_ID ) VALUES (101, 1, 1);
INSERT INTO SECURITY_USER_RESOURCE_GROUP_ROLE ( USER_ID, RESOURCE_GROUP_ID, ROLE_ID ) VALUES (102, 1, 102);
INSERT INTO SECURITY_USER_RESOURCE_GROUP_ROLE ( USER_ID, RESOURCE_GROUP_ID, ROLE_ID ) VALUES (103, 1, 103);
INSERT INTO SECURITY_USER_RESOURCE_GROUP_ROLE ( USER_ID, RESOURCE_GROUP_ID, ROLE_ID ) VALUES (104, 1, 104);


--# Assign the user 'turbine' a system-wide role 'turbine_root'

INSERT INTO SECURITY_USER_RESOURCE_GROUP_ROLE ( USER_ID, RESOURCE_GROUP_ID, ROLE_ID )
SELECT SECURITY_USER.USER_ID, SECURITY_RESOURCE_GROUP.RESOURCE_GROUP_ID, SECURITY_ROLE.ROLE_ID from 
SECURITY_USER, SECURITY_RESOURCE_GROUP, SECURITY_ROLE
WHERE SECURITY_USER.LOGIN_NAME = 'turbine' AND 
SECURITY_RESOURCE_GROUP.RESOURCE_GROUP_NAME = 'global' AND SECURITY_ROLE.ROLE_NAME = 'security_root';

--# Add some default permissions

INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_change_password_u', '');

INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_change_own_password_u', 'Change user own password only. Allowed also for regular users');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_permission_c', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_permission_d', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_permission_r', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_permission_u', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_resource_group_c', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_resource_group_d', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_resource_group_r', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_resource_group_u', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_role_c', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_role_d', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_role_r', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_role_u', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_c', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_d', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_group_role_r', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_group_role_u', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_r', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_u', '');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_required_permission_r', 'Allows to view required permissions in grups for builers and actions');

INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_close_http_session', 'Allows to close other user http session. It causes of user logout');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_switch_user', 'Allows to switch to current httpSession to AccessControlList of another user');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_role_users_r', 'Read of users list who has given role');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_permission_users_r', 'Allows view of users, groups and roles where given permission is used');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_resource_group_users_r', 'Read of users who has in given group at least one permission');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'security_user_group_role_det_r', 'Detail user serurity group permission raport view');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'logged_in_users', 'Allows to view logged in user list');
INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), 'resource_reload', 'Resource reload permission: Security tokens, Secure menu, Templating subsystem');

INSERT INTO SECURITY_PERMISSION (PERMISSION_ID, PERMISSION_NAME, PERMISSION_DESC)  VALUES  (NEXTVAL('SECURITY_PERMISSION_SEQUENCE'), '', '');

--# Add some permissions for the root role

INSERT INTO SECURITY_ROLE_PERMISSION (ROLE_ID,PERMISSION_ID) 
SELECT SECURITY_ROLE.ROLE_ID, SECURITY_PERMISSION.PERMISSION_ID FROM 
SECURITY_ROLE, SECURITY_PERMISSION
WHERE SECURITY_PERMISSION.PERMISSION_NAME = 'admin_users' AND 
SECURITY_ROLE.ROLE_NAME = 'security_root';



